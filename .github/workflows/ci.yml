name: CI

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  testsuite:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.3', '8.1']

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, bcmath
          coverage: pcov

      - name: Composer install
        run: |
          composer --version
          composer install

      - name: Run PHPUnit
        run: |
          if [[ ${{ matrix.php-version }} == '7.3' ]]; then
            vendor/bin/phpunit --coverage-clover=coverage.xml
          else
            vendor/bin/phpunit
          fi

      - name: Code Coverage Report
        if: success() && matrix.php-version == '7.3'
        uses: codecov/codecov-action@v1

  validation:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl, bcmath
          coverage: none

      - name: Composer Install
        run: composer install

      - name: Run phpstan
        run: composer stan-setup && vendor/bin/phpstan analyse --error-format=github

      - name: Run phpcs
        run: composer cs-check

  prefer-lowest:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php-version: [
            '7.3'
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, bcmath
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Composer prefer-lowest
        run: |
          composer update --prefer-dist --no-interaction --prefer-lowest --prefer-stable

      - name: Run PHPUnit
        run: |
          vendor/bin/phpunit
